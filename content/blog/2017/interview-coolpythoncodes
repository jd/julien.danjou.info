---
title: "My interview with Cool Python Codes"
created: !!timestamp '2017-10-05 19:39:00'
image: /media/images/blog/2017/interview-bg.jpg
tags:
    - Python
    - Books
    - Gnocchi
    - VHFFS
    - OpenStack
    - Interview
---

{% block excerpt %}
{% mark excerpt %}

A few days ago, I've recently been contacted by Godson Rapture
from [Cool Python codes](http://coolpythoncodes.com/) to answer a few questions about what I work on in
open source. Godson regularly interview developers and I invite you to check
out his website!

Here's a copy of [my original interview](http://coolpythoncodes.com/julien-danjou/). Enjoy!

{% endmark %}
{% endblock %}

> Good day, Julien Danjou, welcome to Cool Python Codes. Thanks for taking your
> precious time to be here.

You’re welcome!

> Could you kindly tell us about yourself like your full name, hobbies,
> nationality, education, and experience in programming?

Sure. I’m Julien Danjou, I’m French and live in Paris, France. I studied
Computer science for 5 years around 15 years ago, and continued my career in
that field since then, specializing in open source projects.

Those last years, I’ve been working as a software engineer at Red Hat. I’ve
spent the last 10 years working with the Python programming language. Now I
work on the Gnocchi project which is a time series database.

When I’m not coding, I enjoy running half-marathon and playing FPS games.

<img src="/media/images/blog/2017/pyconfr-2017-jd.jpg"
    class="illustration center img-thumbnail"
    style="max-width: 66%;">

> Can you narrate your first programming experience and what got you to start
> learning to program?

I started programming around 2001, and my first serious programs were in Perl.
I was contributing to a hosting platform for free software named VHFFS. It was
a free software project itself, and I enjoyed being able to learn from other
more experienced developers and being able to contribute back to it. That’s
what got me stuck into that world of open source projects.

> Which programming language do you know and which is your favorite?

I know quite a few, I’ve been doing serious programming in Perl, C, Lua, Common
Lisp, Emacs Lisp and Python.

Obviously, my favorite is Common Lisp, but I was never able to use it for any
serious project, for various reasons. So I spend most of my time hacking with
Python, which I really enjoy as it is close to Lisp, in some ways. I see it as
a small subset of Lisp.

> What inspired you to venture into the world of programming and drove you to
> learn a handful of programming languages?

It was mostly scratching my own itches when I started. Each time I saw
something I wanted to do or a feature I wanted in an existing software, I
learned what I needed to get going and get it working.

I studied C and Lua while writing awesome- the window manager that I created 10
years ago and used for a while. I learned Emacs Lisp while writing extensions
that I wanted to see in Emacs, etc. It’s the best way to start.

> What is your blog about?

My blog is a platform where I write about what I work on most of the time.
Nowadays, it’s mostly about Python and the main project I contribute to,
Gnocchi.

When writing about Gnocchi, I usually try to explain what part of the project I
worked on, what new features we achieved, etc.

On Python, I try to share solutions to common problems I encountered or
identified while doing e.g. code reviews. Or presenting a new library I
created!

> Tell us more about your book, The Hacker’s Guide to Python.

It’s a compilation of everything I learned those last years building large
Python applications. I spent the last 6 years developing on a large code base
with thousands of other developers.

I’ve reviewed tons of code and identified the biggest issues, mistakes, and bad
practice that developers tend to have. I decided to compile that in a guide,
helping developers that played a bit with Python to learn the stages to get
really productive with Python.

> OpenStack is the biggest open source project in Python, Can you tell us more about OpenStack?

OpenStack is a cloud computing platform, started 7 years ago now. Its goal is
to provide a programmatic platform to manage your infrastructure while being
open source and avoiding vendor lock-in.

> Who uses OpenStack? Is it for programmers, website owners?

It’s used by a lot of different organizations – not really by individuals. It’s
a big piece of software. You can find it in some famous public cloud providers
(Dreamhost, Rackspace…), and also as a private cloud in a lot of different
organizations, from Bloomberg to eBay or the CERN in Switzerland, a big
OpenStack user. Tons of telecom providers also leverages OpenStack for their
own internal infrastructure.

> Have you participated in any OpenStack conference? What did you speak on if
> you did?

I’ve attended the last 9 OpenStack summits and a few other OpenStack events
around the world. I’ve been engaged in the upstream community for the last 6
years now.

My area of expertise is telemetry, the stack of software that is in charge of
collecting and storing metrics from the various OpenStack components. This is
what I regularly talk about during those events.

> How can one join the OpenStack community?

There’s an entire documentation about that, called the [Developer’s Guide](https://docs.openstack.org/infra/manual/developers.html).
It explains how to setup your environment to send patches, how to join the
community using the mailing-lists or IRC.

>  What makes your book, [The Hacker’s Guide to Python](https://thehackerguidetopython.com) stand out from other
>  Python books? Also, who exactly did you write this book for?

I wrote the book that I always wanted to read about Python, but never found.
It’s not a book for people that want to learn Python from scratch. It’s a great
guide for those who know the language but don’t know the details that
experienced developers know and that make the difference. The best practice,
the elegant solutions to common problems, etc. That’s why it also includes
interviews with prominent Python developers, so they can share their advice on
different areas.

>  How can someone get your book?

I’ve decided to self-publish my book, so he does not have an editor like you
can be used to see. The best place to get it is online at where you can pick
the format you want, electronic or paper.

> What do you mean when you say you hack with Python?

Unfortunately, most people refer to hacking as the activity of some bad guys
trying to get access to whatever they’re not supposed to see. In the book
title, I mean “hacking” as the elegant way of writing code and making things
worse smoothly even when you were not expecting to make it.

> You mentioned earlier that Gnocchi is a time series database. Can you please
> be more elaborate about Gnocchi? Is there also any documentation about
> Gnocchi?

So Gnocchi is a project I started a few years ago to store time series at large
scale. Time series are basically a series of tuple composed of a timestamp and
a value.

Imagine you wanted to store the temperature of all the rooms of the world at
any point of time. You’d need a dedicated database for that with the right data
structure. This is what Gnocchi does: it provides this data structure storage
at very, very large scale.

The primary use case is infrastructure monitoring, so most people use it to
store tons of metrics about their hardware, software, etc. It’s fully
documented on [its website](http://gnocchi.xyz).

> How can a programmer without much experience contribute to open source
> projects?

The best way to start is to try to fix something that irritates you in some
way. It might be a bug, it might be a missing feature. Start small. Don’t try
big things first or you could be discouraged.

Never stop.

Also, don’t plunge right away in the community and start poking random people
or spam them with questions. Do your homework, and listen

Do your homework, and listen to the community for a while to get a sense of how
things are going. That can be joining IRC and lurking or following the mailing
lists for example.

Big open source community dedicate programs to help you become engaged. It
might be worth a try. Generic programs like Outreachy or Google Summer of Code
are a great way to start if you don’t feel confident enough to jump by your own
means in a community.

> Just out of curiosity, do you write code in French?

Never ever. I think it’s acceptable to write in your language if you are sure
that your code will never be open sourced and that your whole team is talking
in that language, no matter what – but it’s a ballsy assumption, clearly.

Truth is that if you do open source, English is the standard, so go with it. Be
sad if you want, but please be pragmatic.

I’ve seen projects being open sourced by companies where all the code source
comments were in Korean. It was impossible for any non-Korean people to get a
glance of what the code and the project was doing, so it just failed and
disappeared.

> How does a team of programmers handle bugs in a large open source project?

I wish there was some magic recipe, but I don’t think it’s the case. What you
want is to have a place where your users can feel safe reporting bugs. Include
a template so they don’t forget any details: how to reproduce the bugs, what
they expected, etc. The worst thing is to have users reporting “That does not
work.” with no details. It’s a waste of time.

What you want is to have a place where your users can feel safe reporting bugs.
Include a template so they don’t forget any details: how to reproduce the bugs,
what they expected, etc. The worst thing is to have users reporting “That does
not work.” with no details. It’s a waste of time.

What tool to use to log all of that really depends on the team size and
culture.

Once that works, the actual fixing of bug doesn’t follow any rule. Most
developers fix the bug they encounter or the ones that are the most critical
for users. Smaller problems might not be fixed for a long time.

> Can you tell us about the new book you are working on and when do we expect
> to get it?

That new book is entitled [“Scaling Python”](https://scaling-python.com) and it provides insight into
how to build largely scalable and distributed applications using Python.

It is also based on my experience in building this kind of software during the
past years. This book also includes interviews of great Python hackers who work
on scalable system or know a thing or two about writing applications for
performance – an important point to have scalable applications.

The book is in its final stage now, and it should be out at the beginning of
2018.

> How can someone get in contact with you?

I’m reachable at [julien@danjou.info](mailto:julien@danjou.info) by email or via
Twitter, [@juldanjou](https://twitter.com/juldanjou).

{# Local Variables: #}
{# mode: markdown #}
{# End: #}
