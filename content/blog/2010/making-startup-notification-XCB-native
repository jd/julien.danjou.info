---
title: Making startup-notification XCB native
created: !!timestamp '2010-05-24 18:05:00'
tags:
    - Freedesktop
    - XCB
    - startup-notification
---
{% block excerpt %}
{% mark excerpt %}

I'm trying to work on XCB this week. And today I've started to accomplish
the second step of a long term goal: making an X11 only library using [XCB](http://xcb.freedesktop.org) as
its primary interface instead of Xlib.

{% endmark %}
{% endblock %}

Last year, I had extended the API of [startup-notification](http://www.freedesktop.org/wiki/Software/startup-notification) to support XCB as
a back-end.  This had been made possible by factorizing some code,
duplicating the X11 code and translating it into equivalent XCB.

Today, I've accomplished the second step, being dropping the Xlib code
inside startup-notification to keep only the XCB one.

For this, I used the x11-xcb library, which is available when Xlib is
compiled with XCB as its transport, which is nowadays the standard.

This library provides the function *XGetXCBConnection*, which can convert a
*Display* pointer to a *xcb_connection_t* pointer. Consequently, it's now
possible to write and execute XCB based code and being compatible with Xlib.

I've made some benchmark of my work for the occasion, in order to measure
what the gain is.

The first table described 1000 launches of a fake application (a modified
version of the startup-notification test suite actually). The X server is
local (the latency is very minimal then). The gain is computed between the
same back-end type for the total time. **Full XCB** is the "version" I'm
working on.

<table>
  <thead>
    <tr>
      <th>Version - Back-end</th>
      <th>User time (seconds)</th>
      <th>Kernel time (seconds)</th>
      <th>Total time (seconds)</th>
      <th>Gain</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0.10 - libx11</td>
      <td>3.20</td>
      <td>7.42</td>
      <td>12.989</td>
      <td>-</td>
    </tr>
    <tr>
      <td>0.10 - libxcb</td>
      <td>2.76</td>
      <td>7.36</td>
      <td>12.414</td>
      <td>-</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Full XCB - libx11</td>
      <td>2.74</td>
      <td>7.50</td>
      <td>12.380</td>
      <td>4.6 %</td>
    </tr>
    <tr>
      <td>Full XCB - libxcb</td>
      <td>2.72</td>
      <td>7.16</td>
      <td>12.037</td>
      <td>3.0 %</td>
    </tr>
  </tbody>
</table>

The user time and kernel time are provided but are not really
interesting. XCB does not offers a big gain in CPU execution time, but is
more about latency. Anyhow, there's always a gain with XCB.

This second table describe the same test but running only 100 times over a
slow network.

<table>
  <thead>
    <tr>
      <th>Version - Back-end</th>
      <th>Total time (seconds)</th>
      <th>Gain</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>0.10 - libx11</td>
      <td>76</td>
      <td>-</td>
    </tr>
    <tr>
      <td>0.10 - libxcb</td>
      <td>35</td>
      <td>-</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Full XCB - libx11</td>
      <td>72</td>
      <td>5.2 %</td>
    </tr>
    <tr>
      <td>Full XCB - libxcb</td>
      <td>33</td>
      <td>5.7%</td>
    </tr>
  </tbody>
</table>

The gain is relatively small, about 5 %. But anyhow, there's still a
gain. Note that the difference between the execution time of the same test
written in XCB and Xlib is just huge. I've tried to optimize the Xlib test,
but I did not manage to win more seconds.

In conclusion, considering that startup-notification is only used when an
application launches another application, the perceivable gain might be even
smaller. But anyhow, I think it's worth it.
